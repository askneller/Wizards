Wizards


Spell Casting

first pass

[client]
- client side is managed by the ClientSpellCastingSystem
- a player has a list of Spells and ManaSources
- when a player joins for the first time the server will tell them what mana sources and spells they have
- when the player casts a spell (presses the key, whatever) the system sends an AttemptCastEvent with the spell to cast

[server]
- the event is sent to the server side CastingSystem which first queries the ManaSystem to see if the player has enough to cast the spell (maybe some other validation first)
- if so the system decreases the amount of mana the player has (informing player by event) and implements the spells effects
- final authority on spells known and mana sources available is the server side


TODO
Gameplay Systems
- Non-instant casting times
- Other spell types like Enchantment, Instant (e.g. Counterspell)
- Add standard power for projectiles
- Individually assignable targets for summoned creatures
- <PARTIAL> Standard power / toughness for all creatures
- <DONE> Assignable targets for summoned creatures
- <DONE> Summoned creatures associated to controller on re-load
  [Future | MtG-like]
- Abilities from MtG like Trample, Flying, Vigilance etc.
- Permanents with activatable effects
- Variable costs / pump-able spells (e.g. for extra power)
- Draw mana separate from casting
Visuals
- Casting visual indicator (more particles), and progress bar
- Mana totems invisible to non-owner
- Outline around selected creature / target
- Fix Slime rendered size vs bounding box
- <DONE> Consolidate client GUIs into one
- <DONE> Visual list of controlled creatures
Coding / Other
- ManaSource as interface on ManaTotemBlockEntity
- <PARTIAL> Make all summoned creatures extend common ancestor
- Spell castable predicates that check position, surrounding blocks etc.
- Separate out spell effect system
- Spells as json files
- List of player's controlled entities <PARTIAL - CastingSystem.playerControlled>
